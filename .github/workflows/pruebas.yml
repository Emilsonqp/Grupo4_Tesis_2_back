name: Unit tests
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  tests:
    name: Pruebas
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12.3
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: dermoapp_test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - name: Checkout de repositorio
      uses: actions/checkout@v2
    - name: Configuración de entorno de python
      uses: actions/setup-python@v2
      with:
          python-version: '3.7'
    - name: Instalación de librerías y dependencias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Correr pruebas
      id: correr-pruebas
      run: coverage run -m pytest && coverage xml
    - name: Validar resultado con errores
      if: ${{ failure() }}
      env:
          MENSAJE_ERROR: Una o varias pruebas fallaron
      run: echo "::set-output name=respuesta::${MENSAJE_ERROR}"
    - name: Validar resultado sin errores
      if: ${{ success() }}
      env:
          MENSAJE_EXITO: Todas las pruebas fueron exitosas
      run: echo "::set-output name=respuesta::${MENSAJE_EXITO}"
